<?php
/**
 * üîÑ MIGRAR CANAL 3001 PARA API CORRETA
 * 
 * Script para migrar o canal 3001 da API atual para whatsapp-api-server.js
 * Baseado nos problemas identificados
 */

echo "üîÑ MIGRANDO CANAL 3001 PARA API CORRETA\n";
echo "=======================================\n\n";

require_once 'config.php';

$vps_ip = '212.85.11.238';
$webhook_principal = 'https://app.pixel12digital.com.br/painel/receber_mensagem_ana_local.php';

// ===== 1. VERIFICAR STATUS ATUAL DO CANAL 3001 =====
echo "1Ô∏è‚É£ VERIFICANDO STATUS ATUAL DO CANAL 3001\n";
echo "------------------------------------------\n";

// Verificar se canal 3001 est√° funcionando
$ch = curl_init("http://$vps_ip:3001/status");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_TIMEOUT, 10);
$response_3001 = curl_exec($ch);
$http_code_3001 = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($http_code_3001 === 200) {
    $status_3001 = json_decode($response_3001, true);
    echo "‚úÖ Canal 3001 est√° funcionando\n";
    echo "üìä Status: " . ($status_3001['status'] ?? 'unknown') . "\n";
    
    // Verificar se √© API diferente
    if (isset($status_3001['clients_status'])) {
        echo "üë• Sess√µes: " . count($status_3001['clients_status']) . "\n";
        foreach ($status_3001['clients_status'] as $sessao => $status) {
            echo "  - $sessao: " . ($status['status'] ?? 'unknown') . "\n";
        }
    } else {
        echo "‚ö†Ô∏è API diferente detectada (n√£o usa whatsapp-api-server.js)\n";
    }
} else {
    echo "‚ùå Canal 3001 n√£o responde (HTTP $http_code_3001)\n";
    echo "üîß Necessita reiniciar o servi√ßo\n";
}

echo "\n";

// ===== 2. VERIFICAR CANAL 3000 (REFER√äNCIA) =====
echo "2Ô∏è‚É£ VERIFICANDO CANAL 3000 (REFER√äNCIA)\n";
echo "---------------------------------------\n";

$ch = curl_init("http://$vps_ip:3000/status");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_TIMEOUT, 10);
$response_3000 = curl_exec($ch);
$http_code_3000 = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($http_code_3000 === 200) {
    $status_3000 = json_decode($response_3000, true);
    echo "‚úÖ Canal 3000 est√° funcionando (API correta)\n";
    echo "üìä Status: " . ($status_3000['status'] ?? 'unknown') . "\n";
    
    if (isset($status_3000['clients_status'])) {
        echo "üë• Sess√µes: " . count($status_3000['clients_status']) . "\n";
        foreach ($status_3000['clients_status'] as $sessao => $status) {
            echo "  - $sessao: " . ($status['status'] ?? 'unknown') . "\n";
        }
    }
} else {
    echo "‚ùå Canal 3000 n√£o responde (HTTP $http_code_3000)\n";
}

echo "\n";

// ===== 3. COMPARAR ENDPOINTS DOS CANAIS =====
echo "3Ô∏è‚É£ COMPARANDO ENDPOINTS DOS CANAIS\n";
echo "-----------------------------------\n";

$endpoints_comparacao = [
    '/send/text' => 'Envio de mensagens',
    '/webhook/config' => 'Configura√ß√£o de webhook',
    '/status' => 'Status do servidor',
    '/qr' => 'QR Code',
    '/webhook/test' => 'Teste de webhook'
];

echo "üìä COMPARA√á√ÉO DE ENDPOINTS:\n";
echo "Endpoint                    | Canal 3000 | Canal 3001 | Status\n";
echo "----------------------------|------------|------------|--------\n";

foreach ($endpoints_comparacao as $endpoint => $descricao) {
    // Testar canal 3000
    $ch = curl_init("http://$vps_ip:3000$endpoint");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 5);
    curl_setopt($ch, CURLOPT_NOBODY, true);
    $response = curl_exec($ch);
    $http_code_3000 = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    // Testar canal 3001
    $ch = curl_init("http://$vps_ip:3001$endpoint");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 5);
    curl_setopt($ch, CURLOPT_NOBODY, true);
    $response = curl_exec($ch);
    $http_code_3001 = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    $status_3000 = ($http_code_3000 === 200) ? "‚úÖ" : "‚ùå";
    $status_3001 = ($http_code_3001 === 200) ? "‚úÖ" : "‚ùå";
    $status_geral = ($http_code_3000 === 200 && $http_code_3001 === 200) ? "‚úÖ" : "‚ö†Ô∏è";
    
    printf("%-28s | %-10s | %-10s | %s\n", 
           substr($endpoint, 0, 28), 
           $status_3000, 
           $status_3001, 
           $status_geral);
}

echo "\n";

// ===== 4. GERAR COMANDOS DE MIGRA√á√ÉO =====
echo "4Ô∏è‚É£ GERANDO COMANDOS DE MIGRA√á√ÉO\n";
echo "--------------------------------\n";

echo "üîß COMANDOS PARA MIGRAR CANAL 3001:\n\n";

echo "1Ô∏è‚É£ CONECTAR NA VPS:\n";
echo "ssh root@$vps_ip\n\n";

echo "2Ô∏è‚É£ PARAR SERVI√áO ATUAL:\n";
echo "pm2 stop whatsapp-3001\n";
echo "pm2 delete whatsapp-3001\n\n";

echo "3Ô∏è‚É£ COPIAR API CORRETA:\n";
echo "cp /var/whatsapp-api/whatsapp-api-server.js /var/whatsapp-api/whatsapp-api-server-3001.js\n\n";

echo "4Ô∏è‚É£ MODIFICAR PORTA NO ARQUIVO:\n";
echo "sed -i 's/const PORT = 3000/const PORT = 3001/g' /var/whatsapp-api/whatsapp-api-server-3001.js\n";
echo "sed -i 's/sessionName: \"default\"/sessionName: \"comercial\"/g' /var/whatsapp-api/whatsapp-api-server-3001.js\n\n";

echo "5Ô∏è‚É£ CONFIGURAR PM2:\n";
echo "pm2 start /var/whatsapp-api/whatsapp-api-server-3001.js --name whatsapp-3001\n";
echo "pm2 save\n\n";

echo "6Ô∏è‚É£ VERIFICAR STATUS:\n";
echo "pm2 status\n";
echo "curl http://$vps_ip:3001/status\n\n";

echo "7Ô∏è‚É£ CONFIGURAR WEBHOOK:\n";
echo "curl -X POST http://$vps_ip:3001/webhook/config \\\n";
echo "  -H \"Content-Type: application/json\" \\\n";
echo "  -d '{\"url\":\"$webhook_principal\"}'\n\n";

echo "8Ô∏è‚É£ TESTAR FUNCIONALIDADES:\n";
echo "curl http://$vps_ip:3001/webhook/config\n";
echo "curl -X POST http://$vps_ip:3001/webhook/test\n";
echo "curl http://$vps_ip:3001/qr\n\n";

// ===== 5. CRIAR SCRIPT DE MIGRA√á√ÉO AUTOM√ÅTICA =====
echo "5Ô∏è‚É£ CRIANDO SCRIPT DE MIGRA√á√ÉO AUTOM√ÅTICA\n";
echo "----------------------------------------\n";

$script_migracao = "#!/bin/bash
# Script para migrar canal 3001 para API correta
# Executar na VPS: bash migrar_canal_3001.sh

echo \"üîÑ MIGRANDO CANAL 3001 PARA API CORRETA\"
echo \"=====================================\"

# 1. Parar servi√ßo atual
echo \"1Ô∏è‚É£ Parando servi√ßo atual...\"
pm2 stop whatsapp-3001
pm2 delete whatsapp-3001

# 2. Verificar se arquivo existe
echo \"2Ô∏è‚É£ Verificando arquivo da API...\"
if [ ! -f \"/var/whatsapp-api/whatsapp-api-server.js\" ]; then
    echo \"‚ùå Arquivo whatsapp-api-server.js n√£o encontrado\"
    exit 1
fi

# 3. Copiar e modificar arquivo
echo \"3Ô∏è‚É£ Copiando e modificando arquivo...\"
cp /var/whatsapp-api/whatsapp-api-server.js /var/whatsapp-api/whatsapp-api-server-3001.js

# 4. Modificar porta e sess√£o
echo \"4Ô∏è‚É£ Modificando configura√ß√µes...\"
sed -i 's/const PORT = 3000/const PORT = 3001/g' /var/whatsapp-api/whatsapp-api-server-3001.js
sed -i 's/sessionName: \"default\"/sessionName: \"comercial\"/g' /var/whatsapp-api/whatsapp-api-server-3001.js

# 5. Iniciar novo servi√ßo
echo \"5Ô∏è‚É£ Iniciando novo servi√ßo...\"
pm2 start /var/whatsapp-api/whatsapp-api-server-3001.js --name whatsapp-3001
pm2 save

# 6. Aguardar inicializa√ß√£o
echo \"6Ô∏è‚É£ Aguardando inicializa√ß√£o...\"
sleep 5

# 7. Verificar status
echo \"7Ô∏è‚É£ Verificando status...\"
pm2 status
curl -s http://$vps_ip:3001/status

# 8. Configurar webhook
echo \"8Ô∏è‚É£ Configurando webhook...\"
curl -X POST http://$vps_ip:3001/webhook/config \\
  -H \"Content-Type: application/json\" \\
  -d '{\"url\":\"$webhook_principal\"}'

echo \"‚úÖ MIGRA√á√ÉO CONCLU√çDA!\"
echo \"üéâ Canal 3001 migrado para API correta!\"
";

// Salvar script
file_put_contents('migrar_canal_3001.sh', $script_migracao);
echo "‚úÖ Script de migra√ß√£o criado: migrar_canal_3001.sh\n\n";

// ===== 6. VERIFICAR SE MIGRA√á√ÉO √â NECESS√ÅRIA =====
echo "6Ô∏è‚É£ VERIFICANDO SE MIGRA√á√ÉO √â NECESS√ÅRIA\n";
echo "----------------------------------------\n";

$migracao_necessaria = false;
$problemas_3001 = [];

// Verificar endpoints cr√≠ticos do canal 3001
$endpoints_criticos = ['/send/text', '/webhook/config', '/qr'];
foreach ($endpoints_criticos as $endpoint) {
    $ch = curl_init("http://$vps_ip:3001$endpoint");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 5);
    curl_setopt($ch, CURLOPT_NOBODY, true);
    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    if ($http_code !== 200) {
        $migracao_necessaria = true;
        $problemas_3001[] = "Endpoint $endpoint n√£o funciona (HTTP $http_code)";
    }
}

if ($migracao_necessaria) {
    echo "‚ö†Ô∏è MIGRA√á√ÉO NECESS√ÅRIA!\n";
    echo "Problemas identificados no canal 3001:\n";
    foreach ($problemas_3001 as $problema) {
        echo "  ‚Ä¢ $problema\n";
    }
    echo "\n‚úÖ Solu√ß√£o: Executar script de migra√ß√£o\n";
} else {
    echo "‚úÖ MIGRA√á√ÉO N√ÉO NECESS√ÅRIA!\n";
    echo "Canal 3001 est√° funcionando corretamente\n";
}

echo "\n";

// ===== 7. RESUMO FINAL =====
echo "7Ô∏è‚É£ RESUMO FINAL\n";
echo "----------------\n";

echo "üéØ AN√ÅLISE DE MIGRA√á√ÉO CONCLU√çDA!\n\n";

echo "üìä STATUS DOS CANAIS:\n";
echo "‚Ä¢ Canal 3000: " . ($http_code_3000 === 200 ? "‚úÖ Funcionando (API correta)" : "‚ùå Problemas") . "\n";
echo "‚Ä¢ Canal 3001: " . ($http_code_3001 === 200 ? "‚ö†Ô∏è Funcionando (API diferente)" : "‚ùå N√£o responde") . "\n";

echo "\nüìã ARQUIVOS CRIADOS:\n";
echo "‚Ä¢ migrar_canal_3001.sh - Script de migra√ß√£o autom√°tica\n";

echo "\nüîß PR√ìXIMOS PASSOS:\n";
if ($migracao_necessaria) {
    echo "1. Executar script de migra√ß√£o na VPS\n";
    echo "2. Verificar se canal 3001 est√° funcionando\n";
    echo "3. Configurar webhook do canal 3001\n";
    echo "4. Testar funcionalidades completas\n";
} else {
    echo "1. Verificar se migra√ß√£o √© realmente necess√°ria\n";
    echo "2. Testar funcionalidades atuais\n";
    echo "3. Monitorar logs se necess√°rio\n";
}

echo "\nüìû COMANDOS √öTEIS:\n";
echo "‚Ä¢ Executar migra√ß√£o: ssh root@$vps_ip 'bash migrar_canal_3001.sh'\n";
echo "‚Ä¢ Status: curl http://$vps_ip:3001/status\n";
echo "‚Ä¢ Webhook: curl http://$vps_ip:3001/webhook/config\n";
echo "‚Ä¢ Logs: ssh root@$vps_ip 'pm2 logs whatsapp-3001 --lines 20'\n\n";

echo "‚úÖ AN√ÅLISE FINALIZADA!\n";
echo "üéâ Script de migra√ß√£o criado com sucesso!\n";
?> 